(declare_var x program)
(declare_var c_0 template)
(declare_var c_1 template)
(declare_var c_2 template)
(declare_var c_3 template)
(declare_var s_0 template)
(declare_var s_1 template)
(declare_var s_2 template)
(declare_var s_3 template)
(assert (-> (AND (>= (+ (* 1024 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) ) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ))
(assert (-> (AND (>= (+ (* 1024 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) ) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) ) 0) ))
(assert (-> (AND (>= (* 1 x ) 0) (>= (+ (* 2036 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ) (>= (+ (* 1 s_0 ) (* 10 s_1 ) (* (- 2) s_1 x ) ) 0) ))
(assert (-> (AND (>= (* 1 x ) 0) (>= (+ (* 2036 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) ) 0) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ) (>= (+ (* 1 c_0 ) (* 10 c_1 ) (* (- 2) c_1 x ) ) 0) ))
(assert (-> (AND (>= (* 1 x ) 0) (>= (+ (* 2036 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) ) 0) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* (- 10) c_1 ) (* 3 c_1 x ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) x ) ) 0) (>= (+ (* 2036 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ) (>= (+ (* 1 s_2 ) (* 1 s_3 x ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) x ) ) 0) (>= (+ (* 2036 1) (* 1 x ) ) 0) (>= (+ (* 1023 1) (* (- 1) x ) ) 0) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) ) 0) (>= (+ (* 1 s_0 ) (* 1 s_1 x ) ) 0) ) (>= (+ (* 1 c_2 ) (* 1 c_3 x ) ) 0) ))

