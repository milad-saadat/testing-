(declare_var a program)
(declare_var a_init template)
(declare_var b program)
(declare_var b_init template)
(declare_var c_0 template)
(declare_var c_1 template)
(declare_var c_2 template)
(declare_var c_3 template)
(declare_var c_4 template)
(declare_var c_5 template)
(declare_var c_6 template)
(declare_var c_7 template)
(declare_var c_8 template)
(assert (< c_0 0))
(assert (AND (>= (+ (* (- 1) a_init ) (* 1 c_1 ) ) 0) (>= (+ (* 1 a_init ) (* (- 1) c_1 ) ) 0) (>= (+ (* (- 1) b_init ) (* 1 c_2 ) ) 0) (>= (+ (* 1 b_init ) (* (- 1) c_2 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a c_4 ) (* (- 1) b c_5 ) (* (- 1) c_3 ) ) 0) (>= (+ (* (- 1) a ) (* 1 c_1 ) ) 0) (>= (+ (* 1 a ) (* (- 1) c_1 ) ) 0) (>= (+ (* (- 1) b ) (* 1 c_2 ) ) 0) (>= (+ (* 1 b ) (* (- 1) c_2 ) ) 0) ) (>= (+ (* 1 a c_7 ) (* 1 b c_8 ) (* 1 c_6 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a c_4 ) (* (- 1) b c_4 ) (* 1 b c_5 ) (* (- 1) c_3 ) (* 1 c_5 ) ) 0) (>= (* 1 b ) 0) (>= (* 1 a ) 0) (>= (+ (* 1 a c_4 ) (* 1 b c_5 ) (* 1 c_3 ) ) 0) ) (>= (+ (* 1 a c_7 ) (* 1 b c_7 ) (* (- 1) b c_8 ) (* 1 c_6 ) (* (- 1) c_8 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a c_4 ) (* (- 1) b c_4 ) (* 1 b c_5 ) (* (- 1) c_3 ) (* 1 c_5 ) ) 0) (>= (* 1 b ) 0) (>= (* 1 a ) 0) (>= (+ (* 1 a c_7 ) (* 1 b c_8 ) (* 1 c_6 ) ) 0) ) (>= (+ (* 1 a c_7 ) (* 1 b c_7 ) (* (- 1) b c_8 ) (* 1 c_6 ) (* (- 1) c_8 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a c_4 ) (* (- 1) b c_4 ) (* 1 b c_5 ) (* (- 1) c_3 ) ) 0) (>= (+ (* (- 1) 1) (* (- 1) b ) ) 0) (>= (* 1 a ) 0) (>= (+ (* 1 a c_4 ) (* 1 b c_5 ) (* 1 c_3 ) ) 0) ) (>= (+ (* 1 a c_7 ) (* 1 b c_7 ) (* (- 1) b c_8 ) (* 1 c_6 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a c_4 ) (* (- 1) b c_4 ) (* 1 b c_5 ) (* (- 1) c_3 ) ) 0) (>= (+ (* (- 1) 1) (* (- 1) b ) ) 0) (>= (* 1 a ) 0) (>= (+ (* 1 a c_7 ) (* 1 b c_8 ) (* 1 c_6 ) ) 0) ) (>= (+ (* 1 a c_7 ) (* 1 b c_7 ) (* (- 1) b c_8 ) (* 1 c_6 ) ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a ) ) 0) (>= (+ (* 1 a c_4 ) (* 1 b c_5 ) (* 1 c_3 ) ) 0) ) (>= (* 1 c_0 ) 0) ))
(assert (-> (AND (>= (+ (* (- 1) 1) (* (- 1) a ) ) 0) (>= (+ (* 1 a c_7 ) (* 1 b c_8 ) (* 1 c_6 ) ) 0) ) (>= (* 1 c_0 ) 0) ))

