(set-option :print-success false)
(set-option :produce-models true)
(declare-const c_0_1 Real)
(declare-const c_1_2 Real)
(declare-const c_2_3 Real)
(declare-const c_3_4 Real)
(declare-const s_0_5 Real)
(declare-const s_1_6 Real)
(declare-const s_2_7 Real)
(declare-const s_3_8 Real)
(declare-const l_00_10 Real)
(declare-const l_00_11 Real)
(declare-const l_00_12 Real)
(declare-const l_00_13 Real)
(declare-const l_00_14 Real)
(declare-const l_00_15 Real)
(declare-const l_00_16 Real)
(declare-const l_00_17 Real)
(declare-const l_00_18 Real)
(declare-const l_00_19 Real)
(declare-const l_00_20 Real)
(declare-const l_00_21 Real)
(declare-const l_00_22 Real)
(declare-const l_00_23 Real)
(declare-const l_00_24 Real)
(declare-const l_00_25 Real)
(declare-const l_00_26 Real)
(declare-const l_00_27 Real)
(declare-const l_00_28 Real)
(declare-const l_00_29 Real)
(declare-const l_00_30 Real)
(declare-const l_00_31 Real)
(declare-const l_00_32 Real)
(declare-const l_00_33 Real)
(declare-const l_00_34 Real)
(declare-const l_00_35 Real)
(declare-const l_00_36 Real)

(assert  (>= ( * (/ 1 1) l_00_10) 0) )
(assert  (>= ( * (/ 1 1) l_00_11) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) s_0_5) ( * ( * (/ 1 1) l_00_10) l_00_10)) ( * ( * (- (/ 1 1)) l_00_11) l_00_11)) 0) )
(assert  (= ( + ( * (- (/ 1 1)) s_1_6) ( * ( * (/ 1 1) l_00_11) l_00_11)) 0) )
(assert  (>= ( * (/ 1 1) l_00_12) 0) )
(assert  (>= ( * (/ 1 1) l_00_13) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) c_0_1) ( * ( * (/ 1 1) l_00_12) l_00_12)) ( * ( * (- (/ 1 1)) l_00_13) l_00_13)) 0) )
(assert  (= ( + ( * (- (/ 1 1)) c_1_2) ( * ( * (/ 1 1) l_00_13) l_00_13)) 0) )
(assert  (>= ( * (/ 1 1) l_00_14) 0) )
(assert  (>= ( * (/ 1 1) l_00_15) 0) )
(assert  (>= ( * (/ 1 1) l_00_16) 0) )
(assert  (= ( + ( + ( + ( * (- (/ 1 1)) s_0_5) ( * (/ 1 1) s_1_6)) ( * ( * (/ 1 1) l_00_14) l_00_14)) ( * ( * ( * (/ 1 1) s_0_5) l_00_16) l_00_16)) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) s_1_6) ( * ( * (/ 1 1) l_00_15) l_00_15)) ( * ( * ( * (/ 1 1) s_1_6) l_00_16) l_00_16)) 0) )
(assert  (>= ( * (/ 1 1) l_00_17) 0) )
(assert  (>= ( * (/ 1 1) l_00_18) 0) )
(assert  (>= ( * (/ 1 1) l_00_19) 0) )
(assert  (>= ( * (/ 1 1) l_00_20) 0) )
(assert  (= ( + ( + ( + ( + ( * (- (/ 1 1)) c_0_1) ( * (/ 1 1) c_1_2)) ( * ( * (/ 1 1) l_00_17) l_00_17)) ( * ( * ( * (/ 1 1) c_0_1) l_00_19) l_00_19)) ( * ( * ( * (/ 1 1) s_0_5) l_00_20) l_00_20)) 0) )
(assert  (= ( + ( + ( + ( * (- (/ 1 1)) c_1_2) ( * ( * (/ 1 1) l_00_18) l_00_18)) ( * ( * ( * (/ 1 1) c_1_2) l_00_19) l_00_19)) ( * ( * ( * (/ 1 1) s_1_6) l_00_20) l_00_20)) 0) )
(assert  (>= ( * (/ 1 1) l_00_21) 0) )
(assert  (>= ( * (/ 1 1) l_00_22) 0) )
(assert  (>= ( * (/ 1 1) l_00_23) 0) )
(assert  (>= ( * (/ 1 1) l_00_24) 0) )
(assert  (= ( + ( + ( + ( + (/ 1 1) ( * (- (/ 1 1)) c_1_2)) ( * ( * (/ 1 1) l_00_21) l_00_21)) ( * ( * ( * (/ 1 1) c_0_1) l_00_23) l_00_23)) ( * ( * ( * (/ 1 1) s_0_5) l_00_24) l_00_24)) 0) )
(assert  (= ( + ( + ( * ( * (/ 1 1) l_00_22) l_00_22) ( * ( * ( * (/ 1 1) c_1_2) l_00_23) l_00_23)) ( * ( * ( * (/ 1 1) s_1_6) l_00_24) l_00_24)) 0) )
(assert  (>= ( * (/ 1 1) l_00_25) 0) )
(assert  (>= ( * (/ 1 1) l_00_26) 0) )
(assert  (>= ( * (/ 1 1) l_00_27) 0) )
(assert  (= ( + ( + ( + ( * (- (/ 1 1)) s_2_7) ( * ( * (/ 1 1) l_00_25) l_00_25)) ( * ( * (- (/ 1 1)) l_00_26) l_00_26)) ( * ( * ( * (/ 1 1) s_0_5) l_00_27) l_00_27)) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) s_3_8) ( * ( * (- (/ 1 1)) l_00_26) l_00_26)) ( * ( * ( * (/ 1 1) s_1_6) l_00_27) l_00_27)) 0) )
(assert  (>= ( * (/ 1 1) l_00_28) 0) )
(assert  (>= ( * (/ 1 1) l_00_29) 0) )
(assert  (>= ( * (/ 1 1) l_00_30) 0) )
(assert  (>= ( * (/ 1 1) l_00_31) 0) )
(assert  (= ( + ( + ( + ( + ( * (- (/ 1 1)) c_2_3) ( * ( * (/ 1 1) l_00_28) l_00_28)) ( * ( * (- (/ 1 1)) l_00_29) l_00_29)) ( * ( * ( * (/ 1 1) c_0_1) l_00_30) l_00_30)) ( * ( * ( * (/ 1 1) s_0_5) l_00_31) l_00_31)) 0) )
(assert  (= ( + ( + ( + ( * (- (/ 1 1)) c_3_4) ( * ( * (- (/ 1 1)) l_00_29) l_00_29)) ( * ( * ( * (/ 1 1) c_1_2) l_00_30) l_00_30)) ( * ( * ( * (/ 1 1) s_1_6) l_00_31) l_00_31)) 0) )
(assert  (>= ( * (/ 1 1) l_00_32) 0) )
(assert  (>= ( * (/ 1 1) l_00_33) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) s_2_7) ( * ( * (/ 1 1) l_00_32) l_00_32)) ( * ( * ( * (/ 1 1) s_2_7) l_00_33) l_00_33)) 0) )
(assert  (= ( + ( * (- (/ 1 1)) s_3_8) ( * ( * ( * (/ 1 1) s_3_8) l_00_33) l_00_33)) 0) )
(assert  (>= ( * (/ 1 1) l_00_34) 0) )
(assert  (>= ( * (/ 1 1) l_00_35) 0) )
(assert  (>= ( * (/ 1 1) l_00_36) 0) )
(assert  (= ( + ( + ( + ( * (- (/ 1 1)) c_2_3) ( * ( * (/ 1 1) l_00_34) l_00_34)) ( * ( * ( * (/ 1 1) c_2_3) l_00_35) l_00_35)) ( * ( * ( * (/ 1 1) s_2_7) l_00_36) l_00_36)) 0) )
(assert  (= ( + ( + ( * (- (/ 1 1)) c_3_4) ( * ( * ( * (/ 1 1) c_3_4) l_00_35) l_00_35)) ( * ( * ( * (/ 1 1) s_3_8) l_00_36) l_00_36)) 0) )

(check-sat)
(get-value(c_0_1 c_1_2 c_2_3 c_3_4 s_0_5 s_1_6 s_2_7 s_3_8))
